name: Build GLFW Libraries

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            cmake-arch: x64
          - os: linux
            arch: arm64
            cmake-arch: aarch64
            runner-label: self-hosted
          - os: windows-latest
            arch: x86_64
            cmake-arch: x64
          - os: windows-latest
            arch: x86
            cmake-arch: win32
          - os: windows-latest
            arch: arm64
            cmake-arch: arm64
          - os: macos-latest
            arch: x86_64
            cmake-arch: x86_64
          - os: macos-latest
            arch: arm64
            cmake-arch: arm64
    steps:
    - uses: actions/checkout@v4.1.7
      with:
        repository: 'glfw/glfw'
        path: 'glfw'
        submodules: true

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libwayland-dev libxkbcommon-dev xorg-dev

    - name: Configure GLFW with CMake for Linux
      if: matrix.os == 'linux' || matrix.os == 'ubuntu-latest'
      run: cmake -S glfw -B glfw/build

    - name: Configure GLFW with CMake for macOS
      if: matrix.os == 'macos-latest'
      run: cmake -S glfw -B glfw/build -DCMAKE_OSX_ARCHITECTURES=${{ matrix.cmake-arch }}

    - name: Configure GLFW with CMake for Windows
      if: matrix.os == 'windows-latest'
      run: cmake -S glfw -B glfw/build -A ${{ matrix.cmake-arch }}

    - name: Build GLFW
      run: cmake --build glfw/build --config Release

    - name: Move Windows binaries
      if: matrix.os == 'windows-latest'
      run: |
        mv glfw/build/Release/*.dll glfw/build/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.4
      with:
        name: glfw-${{ matrix.os }}-${{ matrix.arch }}-artifacts 
        path: |
          glfw/build/*.dll
          glfw/build/*.so
          glfw/build/*.dylib
        if-no-files-found: ignore # 'warn' or 'ignore' or 'error'
