// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.GLFW
{
	/// <summary>
	/// <br/>
	/// This describes the gamma ramp for a monitor.<br/>
	/// <br/>
	/// <br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "GLFWgammaramp")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct GLFWgammaramp
	{
		/// <summary>
		/// An array of value describing the response of the red channel.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "red")]
		[NativeName(NativeNameType.Type, "unsigned short*")]
		public unsafe ushort* Red;

		/// <summary>
		/// An array of value describing the response of the green channel.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "green")]
		[NativeName(NativeNameType.Type, "unsigned short*")]
		public unsafe ushort* Green;

		/// <summary>
		/// An array of value describing the response of the blue channel.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "blue")]
		[NativeName(NativeNameType.Type, "unsigned short*")]
		public unsafe ushort* Blue;

		/// <summary>
		/// The number of elements in each array.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint Size;


		public unsafe GLFWgammaramp(ushort* red = default, ushort* green = default, ushort* blue = default, uint size = default)
		{
			Red = red;
			Green = green;
			Blue = blue;
			Size = size;
		}


	}

}
